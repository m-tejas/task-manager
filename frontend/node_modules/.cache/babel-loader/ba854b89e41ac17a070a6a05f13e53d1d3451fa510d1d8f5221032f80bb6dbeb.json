{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drtej\\\\task-manager-v1\\\\frontend\\\\src\\\\pages\\\\TaskBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getTasks, createTask } from '../services/api';\nimport TaskColumn from '../components/TaskColumn';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskBoard() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const {\n          data\n        } = await getTasks();\n        setTasks(data);\n      } catch (error) {\n        toast.error(\"Failed to fetch tasks.\");\n      }\n    };\n    fetchTasks();\n  }, []);\n  const handleAddTask = async () => {\n    if (newTask.trim()) {\n      try {\n        const {\n          data\n        } = await createTask({\n          title: newTask,\n          column: 'todo'\n        });\n        setTasks([...tasks, data]);\n        setNewTask('');\n      } catch (error) {\n        toast.error(\"Error adding new task.\");\n      }\n    }\n  };\n  const onDragEnd = async result => {\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n    if (!destination || destination.droppableId === source.droppableId) {\n      return;\n    }\n    const updatedTask = tasks.find(task => task._id === draggableId);\n    updatedTask.column = destination.droppableId;\n    try {\n      await createTask(draggableId, updatedTask);\n      setTasks(prevTasks => prevTasks.map(task => task._id === draggableId ? updatedTask : task));\n    } catch (error) {\n      toast.error(\"Error updating task status.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-board\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns\",\n        children: [/*#__PURE__*/_jsxDEV(TaskColumn, {\n          tasks: tasks,\n          status: \"todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskColumn, {\n          tasks: tasks,\n          status: \"in-progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskColumn, {\n          tasks: tasks,\n          status: \"done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-task\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add New Task\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskBoard, \"bPCx0+2jxyKSWrxqvYM6Q5jItg8=\");\n_c = TaskBoard;\nexport default TaskBoard;\nvar _c;\n$RefreshReg$(_c, \"TaskBoard\");","map":{"version":3,"names":["React","useEffect","useState","getTasks","createTask","TaskColumn","DragDropContext","toast","jsxDEV","_jsxDEV","TaskBoard","_s","tasks","setTasks","newTask","setNewTask","fetchTasks","data","error","handleAddTask","trim","title","column","onDragEnd","result","destination","source","draggableId","droppableId","updatedTask","find","task","_id","prevTasks","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","status","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/drtej/task-manager-v1/frontend/src/pages/TaskBoard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getTasks, createTask } from '../services/api';\r\nimport TaskColumn from '../components/TaskColumn';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction TaskBoard() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const { data } = await getTasks();\r\n        setTasks(data);\r\n      } catch (error) {\r\n        toast.error(\"Failed to fetch tasks.\");\r\n      }\r\n    };\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const handleAddTask = async () => {\r\n    if (newTask.trim()) {\r\n      try {\r\n        const { data } = await createTask({ title: newTask, column: 'todo' });\r\n        setTasks([...tasks, data]);\r\n        setNewTask('');\r\n      } catch (error) {\r\n        toast.error(\"Error adding new task.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const onDragEnd = async (result) => {\r\n    const { destination, source, draggableId } = result;\r\n\r\n    if (!destination || destination.droppableId === source.droppableId) {\r\n      return;\r\n    }\r\n\r\n    const updatedTask = tasks.find((task) => task._id === draggableId);\r\n    updatedTask.column = destination.droppableId;\r\n\r\n    try {\r\n      await createTask(draggableId, updatedTask);\r\n      setTasks((prevTasks) =>\r\n        prevTasks.map((task) => (task._id === draggableId ? updatedTask : task))\r\n      );\r\n    } catch (error) {\r\n      toast.error(\"Error updating task status.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-board\">\r\n      <h2>Task Board</h2>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <div className=\"columns\">\r\n          <TaskColumn tasks={tasks} status=\"todo\" />\r\n          <TaskColumn tasks={tasks} status=\"in-progress\" />\r\n          <TaskColumn tasks={tasks} status=\"done\" />\r\n        </div>\r\n      </DragDropContext>\r\n      <div className=\"add-task\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add New Task\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n        />\r\n        <button onClick={handleAddTask}>Add Task</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}