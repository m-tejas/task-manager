{"ast":null,"code":"import React,{useEffect,useState}from'react';import{getTasks,createTask,updateTask}from'../services/api';import TaskColumn from'../components/TaskColumn';import{DragDropContext}from'react-beautiful-dnd';import{toast}from'react-toastify';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function TaskBoard(){const[tasks,setTasks]=useState([]);const[newTask,setNewTask]=useState('');useEffect(()=>{const fetchTasks=async()=>{try{const{data}=await getTasks();setTasks(data);}catch(error){toast.error(\"Failed to fetch tasks.\");}};fetchTasks();},[]);const handleAddTask=async()=>{if(newTask.trim()){try{const{data}=await createTask({title:newTask,column:'todo'});setTasks(prevTasks=>[...prevTasks,data]);setNewTask('');}catch(error){toast.error(\"Error adding new task.\");}}};const onDragEnd=async result=>{const{destination,source,draggableId}=result;if(!destination||destination.droppableId===source.droppableId){return;}const updatedTask=tasks.find(task=>task._id===draggableId);updatedTask.column=destination.droppableId;try{await updateTask(draggableId,updatedTask);setTasks(prevTasks=>prevTasks.map(task=>task._id===draggableId?updatedTask:task));}catch(error){toast.error(\"Error updating task status.\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"task-board\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Task Board\"}),/*#__PURE__*/_jsx(DragDropContext,{onDragEnd:onDragEnd,children:/*#__PURE__*/_jsxs(\"div\",{className:\"columns\",children:[/*#__PURE__*/_jsx(TaskColumn,{tasks:tasks,status:\"todo\"}),/*#__PURE__*/_jsx(TaskColumn,{tasks:tasks,status:\"in-progress\"}),/*#__PURE__*/_jsx(TaskColumn,{tasks:tasks,status:\"done\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"add-task\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Add New Task\",value:newTask,onChange:e=>setNewTask(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddTask,children:\"Add Task\"})]})]});}export default TaskBoard;","map":{"version":3,"names":["React","useEffect","useState","getTasks","createTask","updateTask","TaskColumn","DragDropContext","toast","jsx","_jsx","jsxs","_jsxs","TaskBoard","tasks","setTasks","newTask","setNewTask","fetchTasks","data","error","handleAddTask","trim","title","column","prevTasks","onDragEnd","result","destination","source","draggableId","droppableId","updatedTask","find","task","_id","map","className","children","status","type","placeholder","value","onChange","e","target","onClick"],"sources":["C:/Users/drtej/task-manager-v1/frontend/src/pages/TaskBoard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getTasks, createTask, updateTask } from '../services/api';\r\nimport TaskColumn from '../components/TaskColumn';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction TaskBoard() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const { data } = await getTasks();\r\n        setTasks(data);\r\n      } catch (error) {\r\n        toast.error(\"Failed to fetch tasks.\");\r\n      }\r\n    };\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const handleAddTask = async () => {\r\n    if (newTask.trim()) {\r\n      try {\r\n        const { data } = await createTask({ title: newTask, column: 'todo' });\r\n        setTasks((prevTasks) => [...prevTasks, data]);\r\n        setNewTask('');\r\n      } catch (error) {\r\n        toast.error(\"Error adding new task.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const onDragEnd = async (result) => {\r\n    const { destination, source, draggableId } = result;\r\n\r\n    if (!destination || destination.droppableId === source.droppableId) {\r\n      return;\r\n    }\r\n\r\n    const updatedTask = tasks.find((task) => task._id === draggableId);\r\n    updatedTask.column = destination.droppableId;\r\n\r\n    try {\r\n      await updateTask(draggableId, updatedTask);\r\n      setTasks((prevTasks) =>\r\n        prevTasks.map((task) => (task._id === draggableId ? updatedTask : task))\r\n      );\r\n    } catch (error) {\r\n      toast.error(\"Error updating task status.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-board\">\r\n      <h2>Task Board</h2>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <div className=\"columns\">\r\n          <TaskColumn tasks={tasks} status=\"todo\" />\r\n          <TaskColumn tasks={tasks} status=\"in-progress\" />\r\n          <TaskColumn tasks={tasks} status=\"done\" />\r\n        </div>\r\n      </DragDropContext>\r\n      <div className=\"add-task\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add New Task\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n        />\r\n        <button onClick={handleAddTask}>Add Task</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}